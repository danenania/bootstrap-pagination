// Generated by CoffeeScript 1.6.2
(function() {
  this.BootstrapPagination = (function() {
    function BootstrapPagination(selector, options) {
      var _ref, _ref1;

      this.options = options != null ? options : {};
      this.el = $(selector).html("<div class='pagination'>\n  <ul>\n    <li>\n      <a class='prev' href='#'>" + ((_ref = options.prevText) != null ? _ref : '«') + "</a>\n    </li>\n    <li>\n      <a class='next' href='#'>" + ((_ref1 = options.nextText) != null ? _ref1 : '»') + "</a>\n    </li>\n  </ul>\n</div>\n<div class='pagination numeric'><ul/></div>");
      this.numPages = this.options.numPages;
      this.selectedIndex = this.options.selectedIndex;
      this.nextBtn = this.el.find('li a.next');
      this.prevBtn = this.el.find('li a.prev');
      this.pageNums = new BootstrapPageNums(this.el.find('.pagination.numeric ul'));
      this.initListeners();
      this.render(this.numPages, this.selectedIndex);
    }

    BootstrapPagination.prototype.initListeners = function() {
      var _this = this;

      $(this.pageNums).bind("pageSelect", function(e, num) {
        if (num !== _this.selectedIndex) {
          _this.render(_this.numPages, num);
          return _this._pageSelect(num);
        }
      });
      this.nextBtn.click(function(e) {
        e.preventDefault();
        if ((_this.numPages != null) && (_this.selectedIndex != null) && _this.selectedIndex < _this.numPages - 1) {
          _this.render(_this.numPages, _this.selectedIndex + 1);
          return _this._pageSelect(_this.selectedIndex);
        }
      });
      return this.prevBtn.click(function(e) {
        e.preventDefault();
        if ((_this.numPages != null) && (_this.selectedIndex != null) && _this.selectedIndex > 0) {
          _this.render(_this.numPages, _this.selectedIndex - 1);
          return _this._pageSelect(_this.selectedIndex);
        }
      });
    };

    BootstrapPagination.prototype.render = function(numPages, selectedIndex) {
      this.numPages = numPages;
      this.selectedIndex = selectedIndex;
      this.el.toggle((this.numPages != null) && (this.selectedIndex != null) && this.numPages > 1);
      return this.pageNums.render(this.numPages, this.selectedIndex, this.options.numBlocks);
    };

    BootstrapPagination.prototype._pageSelect = function(num) {
      var _base;

      return typeof (_base = this.options).onSelect === "function" ? _base.onSelect(num) : void 0;
    };

    return BootstrapPagination;

  })();

  this.BootstrapPageNums = (function() {
    BootstrapPageNums.getPageIndex = function(numPages, numBlocks, middleBlock, lastBlock, selectedIndex, wasEllipsisAnterior, i) {
      if (i === 0) {
        return 0;
      } else if (i === lastBlock - 1) {
        return numPages - 1;
      } else if (wasEllipsisAnterior) {
        if (selectedIndex >= (numPages - middleBlock)) {
          if (i === numBlocks - 1) {
            return numPages - 1;
          } else {
            return (numPages - 1) - ((numBlocks - 1) - i);
          }
        } else if (i === middleBlock) {
          return selectedIndex;
        } else if (i < middleBlock) {
          return selectedIndex - (middleBlock - i);
        } else if (i > middleBlock) {
          return selectedIndex + (i - middleBlock);
        }
      } else {
        if (i === selectedIndex) {
          return i;
        } else if (i > selectedIndex) {
          return selectedIndex + (i - selectedIndex);
        } else if (i < selectedIndex) {
          return selectedIndex - (selectedIndex - i);
        }
      }
    };

    function BootstrapPageNums(selector, options) {
      this.options = options != null ? options : {};
      this.el = $(selector);
    }

    BootstrapPageNums.prototype.render = function(numPages, selectedIndex, numBlocks) {
      var ellipsisAnterior, ellipsisPosterior, i, index, lastBlock, middleBlock, middlePage, wasEllipsisAnterior, _i, _results;

      if (numBlocks == null) {
        numBlocks = 7;
      }
      this.el.empty();
      middleBlock = Math.round((numBlocks - 1) / 2);
      middlePage = Math.round(numPages / 2);
      lastBlock = Math.min(numPages, numBlocks);
      wasEllipsisAnterior = false;
      _results = [];
      for (i = _i = 0; 0 <= lastBlock ? _i < lastBlock : _i > lastBlock; i = 0 <= lastBlock ? ++_i : --_i) {
        if (i > numPages - 1) {
          break;
        }
        ellipsisAnterior = i === 1 && (numPages - numBlocks) >= 1 && selectedIndex > (numBlocks - (middleBlock + 1));
        ellipsisPosterior = i === numBlocks - 2 && (numPages - numBlocks) > 0 && selectedIndex < (numPages - (middleBlock + (numBlocks % 2)));
        if (ellipsisAnterior) {
          wasEllipsisAnterior = true;
        }
        index = BootstrapPageNums.getPageIndex(numPages, numBlocks, middleBlock, lastBlock, selectedIndex, wasEllipsisAnterior, i);
        _results.push(this.addBlock(index, index === selectedIndex, ellipsisAnterior || ellipsisPosterior));
      }
      return _results;
    };

    BootstrapPageNums.prototype.addBlock = function(index, current, ellipsis) {
      var block;

      if (current == null) {
        current = false;
      }
      if (ellipsis == null) {
        ellipsis = false;
      }
      block = $("<li " + (current ? "class='active'" : "") + ">\n  <a href='#' data-index='" + index + "'>" + (ellipsis ? '...' : index + 1) + "</a>\n</li>");
      this.addListeners(block);
      return this.el.append(block);
    };

    BootstrapPageNums.prototype.addListeners = function(block) {
      var _this = this;

      return block.click(function(e) {
        $(_this).trigger('pageSelect', parseInt($(e.target).data('index')));
        return false;
      });
    };

    return BootstrapPageNums;

  })();

}).call(this);
